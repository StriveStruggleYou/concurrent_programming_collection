并发编程网相关信息介绍：
http://ifeve.com/disruptor-info/

云栖社区，使用场景介绍

https://yq.aliyun.com/articles/85666?spm=a2c4e.11153940.blogcont85658.15.516a1229VCZKM2

环形队列介绍以及使用

https://mp.weixin.qq.com/s?__biz=MjM5ODYxMDA5OQ==&mid=2651959957&idx=1&sn=a82bb7e8203b20b2a0cb5fc95b7936a5&chksm=bd2d07498a5a8e5f9f8e7b5aeaa5bd8585a0ee4bf470956e7fd0a2b36d132eb46553265f4eaf&scene=21#wechat_redirect

源码解析

http://brokendreams.iteye.com/blog/2255703

在云栖社区里看到了经典的使用场景:
两个过程('多'线程)之间的数据交换十分的高效。爬虫的场景应该还是挺需要的，环形队列任务的应该也挺需要的。


思考的问题：

1.disruptor 如何保证数据不丢（包括不被覆盖，内存数据如何恢复，根据日志信息的话该如何进行设计）。

2.disruptor 多阶段的DSL语法

3.